package derekahedron.invexp.sack;

import derekahedron.invexp.registry.InvExpRegistryKeys;
import derekahedron.invexp.util.InvExpUtil;
import net.minecraft.registry.Registerable;
import net.minecraft.registry.RegistryKey;
import org.jetbrains.annotations.NotNull;

public class SackTypes {
    // Vanilla Sack Types
    public static final RegistryKey<SackType> WOOD = of("wood");
    public static final RegistryKey<SackType> DOOR = of("door");
    public static final RegistryKey<SackType> PRESSURE_PLATE = of("pressure_plate");
    public static final RegistryKey<SackType> BUTTON = of("button");
    public static final RegistryKey<SackType> STONE = of("stone");
    public static final RegistryKey<SackType> BRICKS = of("bricks");
    public static final RegistryKey<SackType> MUD_BRICKS = of("mud_bricks");
    public static final RegistryKey<SackType> RESIN_BRICKS = of("resin_bricks");
    public static final RegistryKey<SackType> SANDSTONE = of("sandstone");
    public static final RegistryKey<SackType> PRISMARINE = of("prismarine");
    public static final RegistryKey<SackType> NETHER_BRICKS = of("nether_bricks");
    public static final RegistryKey<SackType> PURPUR = of("purpur");
    public static final RegistryKey<SackType> METAL_BLOCK = of("metal_block");
    public static final RegistryKey<SackType> CRYSTAL_BLOCK = of("crystal_block");
    public static final RegistryKey<SackType> CHAINS = of("chains");
    public static final RegistryKey<SackType> WOOL = of("wool");
    public static final RegistryKey<SackType> TERRACOTTA = of("terracotta");
    public static final RegistryKey<SackType> CONCRETE = of("concrete");
    public static final RegistryKey<SackType> CONCRETE_POWDER = of("concrete_powder");
    public static final RegistryKey<SackType> GLASS = of("glass");
    public static final RegistryKey<SackType> BED = of("bed");
    public static final RegistryKey<SackType> CANDLE = of("candle");
    public static final RegistryKey<SackType> BANNER = of("banner");
    public static final RegistryKey<SackType> SOIL = of("soil");
    public static final RegistryKey<SackType> ICE = of("ice");
    public static final RegistryKey<SackType> SNOW = of("snow");
    public static final RegistryKey<SackType> BONE_BLOCK = of("bone_block");
    public static final RegistryKey<SackType> ORE = of("ore");
    public static final RegistryKey<SackType> FUNGUS = of("fungus");
    public static final RegistryKey<SackType> PLANT = of("plant");
    public static final RegistryKey<SackType> BAMBOO = of("bamboo");
    public static final RegistryKey<SackType> CHORUS_FRUIT = of("chorus_fruit");
    public static final RegistryKey<SackType> EGG = of("egg");
    public static final RegistryKey<SackType> WHEAT_SEEDS = of("wheat_seeds");
    public static final RegistryKey<SackType> COCOA_BEANS = of("cocoa_beans");
    public static final RegistryKey<SackType> PUMPKIN_SEEDS = of("pumpkin_seeds");
    public static final RegistryKey<SackType> MELON_SEEDS = of("melon_seeds");
    public static final RegistryKey<SackType> BEETROOT_SEEDS = of("beetroot_seeds");
    public static final RegistryKey<SackType> TORCHFLOWER_SEEDS = of("torchflower_seeds");
    public static final RegistryKey<SackType> PITCHER_POD = of("pitcher_pod");
    public static final RegistryKey<SackType> GLOW_BERRIES = of("glow_berries");
    public static final RegistryKey<SackType> SWEET_BERRIES = of("sweet_berries");
    public static final RegistryKey<SackType> NETHER_WART = of("nether_wart");
    public static final RegistryKey<SackType> SEA_CREATURE = of("sea_creature");
    public static final RegistryKey<SackType> KELP = of("kelp");
    public static final RegistryKey<SackType> CORAL = of("coral");
    public static final RegistryKey<SackType> SPONGE = of("sponge");
    public static final RegistryKey<SackType> MELON = of("melon");
    public static final RegistryKey<SackType> PUMPKIN = of("pumpkin");
    public static final RegistryKey<SackType> NEST = of("nest");
    public static final RegistryKey<SackType> HONEY = of("honey");
    public static final RegistryKey<SackType> RESIN = of("resin");
    public static final RegistryKey<SackType> FROGLIGHT = of("froglight");
    public static final RegistryKey<SackType> SCULK = of("sculk");
    public static final RegistryKey<SackType> COBWEB = of("cobweb");
    public static final RegistryKey<SackType> BEDROCK = of("bedrock");
    public static final RegistryKey<SackType> TORCH = of("torch");
    public static final RegistryKey<SackType> LANTERN = of("lantern");
    public static final RegistryKey<SackType> END_CRYSTAL = of("end_crystal");
    public static final RegistryKey<SackType> BELL = of("bell");
    public static final RegistryKey<SackType> SCAFFOLDING = of("scaffolding");
    public static final RegistryKey<SackType> POT = of("pot");
    public static final RegistryKey<SackType> ARMOR_STAND = of("armor_stand");
    public static final RegistryKey<SackType> ITEM_FRAME = of("item_frame");
    public static final RegistryKey<SackType> PAINTING = of("painting");
    public static final RegistryKey<SackType> SIGN = of("sign");
    public static final RegistryKey<SackType> HEAD = of("head");
    public static final RegistryKey<SackType> INFESTED_STONE = of("infested_stone");
    public static final RegistryKey<SackType> REDSTONE_COMPONENT = of("redstone_component");
    public static final RegistryKey<SackType> RAIL = of("rail");
    public static final RegistryKey<SackType> MINECART = of("minecart");
    public static final RegistryKey<SackType> TNT = of("tnt");
    public static final RegistryKey<SackType> BUCKET = of("bucket");
    public static final RegistryKey<SackType> FIRE_CHARGE = of("fire_charge");
    public static final RegistryKey<SackType> BONE_MEAL = of("bone_meal");
    public static final RegistryKey<SackType> NAME_TAG = of("name_tag");
    public static final RegistryKey<SackType> LEAD = of("lead");
    public static final RegistryKey<SackType> COMPASS = of("compass");
    public static final RegistryKey<SackType> CLOCK = of("clock");
    public static final RegistryKey<SackType> MAP = of("map");
    public static final RegistryKey<SackType> WIND_CHARGE = of("wind_charge");
    public static final RegistryKey<SackType> FIREWORK_ROCKET = of("firework_rocket");
    public static final RegistryKey<SackType> SADDLE = of("saddle");
    public static final RegistryKey<SackType> BOAT = of("boat");
    public static final RegistryKey<SackType> GOAT_HORN = of("goat_horn");
    public static final RegistryKey<SackType> MUSIC_DISC = of("music_disc");
    public static final RegistryKey<SackType> TOTEM_OF_UNDYING = of("totem_of_undying");
    public static final RegistryKey<SackType> ARROW = of("arrow");
    public static final RegistryKey<SackType> FOOD = of("food");
    public static final RegistryKey<SackType> CARROT = of("carrot");
    public static final RegistryKey<SackType> POTATO = of("potato");
    public static final RegistryKey<SackType> BEETROOT = of("beetroot");
    public static final RegistryKey<SackType> RAW_FISH = of("raw_fish");
    public static final RegistryKey<SackType> BOTTLE = of("bottle");
    public static final RegistryKey<SackType> POTION = of("potion");
    public static final RegistryKey<SackType> WHEAT = of("wheat");
    public static final RegistryKey<SackType> CREATURE = of("creature");
    public static final RegistryKey<SackType> HEART_OF_THE_SEA = of("heart_of_the_sea");
    public static final RegistryKey<SackType> HEAVY_CORE = of("heavy_core");
    public static final RegistryKey<SackType> DYE = of("dye");
    public static final RegistryKey<SackType> PAPER = of("paper");
    public static final RegistryKey<SackType> BOOK = of("book");
    public static final RegistryKey<SackType> FIREWORK_STAR = of("firework_star");
    public static final RegistryKey<SackType> SUGAR = of("sugar");
    public static final RegistryKey<SackType> BANNER_PATTERN = of("banner_pattern");
    public static final RegistryKey<SackType> POTTERY_SHERD = of("pottery_sherd");
    public static final RegistryKey<SackType> SMITHING_TEMPLATE = of("smithing_template");
    public static final RegistryKey<SackType> KEY = of("key");
    public static final RegistryKey<SackType> SPAWN_EGG = of("spawn_egg");
    public static final RegistryKey<SackType> COMMAND_BLOCK = of("command_block");
    // Biomes O' Plenty Sack Types
    public static final RegistryKey<SackType> BODY_PART = of("body_part");
    public static final RegistryKey<SackType> WISPJELLY = of("wispjelly");
    public static final RegistryKey<SackType> NULL = of("null");
    // Storage Drawers Sack Types
    public static final RegistryKey<SackType> DRAWER = of("drawer");
    public static final RegistryKey<SackType> DRAWER_UPGRADE = of("drawer_upgrade");
    public static final RegistryKey<SackType> DRAWER_CONTROLLER = of("drawer_controller");
    public static final RegistryKey<SackType> KEY_BUTTON = of("key_button");
    // Trailier Tales Sack Types
    public static final RegistryKey<SackType> CYAN_ROSE_SEEDS = of("cyan_rose_seeds");
    public static final RegistryKey<SackType> DAWNTRAIL_SEEDS = of("dawntrail_seeds");
    public static final RegistryKey<SackType> MANEDROP_GERM = of("manedrop_germ");
    // Waystones Sack Types
    public static final RegistryKey<SackType> WAYSTONE = of("waystone");
    public static final RegistryKey<SackType> PORTSTONE = of("portstone");
    public static final RegistryKey<SackType> SHARESTONE = of("sharestone");
    public static final RegistryKey<SackType> WARP_PLATE = of("warp_plate");
    // Wilder Wild Sack Types
    public static final RegistryKey<SackType> PRICKLY_PEAR = of("prickly_pear");

    public static RegistryKey<SackType> of(String id) {
        return RegistryKey.of(InvExpRegistryKeys.SACK_TYPE, InvExpUtil.identifier(id));
    }

    public static void bootstrap(@NotNull Registerable<SackType> registry) {
        // Vanilla Sack Types
        registry.register(WOOD, new SackType());
        registry.register(DOOR, new SackType());
        registry.register(PRESSURE_PLATE, new SackType());
        registry.register(BUTTON, new SackType());
        registry.register(STONE, new SackType());
        registry.register(BRICKS, new SackType());
        registry.register(MUD_BRICKS, new SackType());
        registry.register(RESIN_BRICKS, new SackType());
        registry.register(SANDSTONE, new SackType());
        registry.register(PRISMARINE, new SackType());
        registry.register(NETHER_BRICKS, new SackType());
        registry.register(PURPUR, new SackType());
        registry.register(METAL_BLOCK, new SackType());
        registry.register(CRYSTAL_BLOCK, new SackType());
        registry.register(CHAINS, new SackType());
        registry.register(WOOL, new SackType());
        registry.register(TERRACOTTA, new SackType());
        registry.register(CONCRETE, new SackType());
        registry.register(CONCRETE_POWDER, new SackType());
        registry.register(GLASS, new SackType());
        registry.register(BED, new SackType());
        registry.register(CANDLE, new SackType());
        registry.register(BANNER, new SackType());
        registry.register(SOIL, new SackType());
        registry.register(ICE, new SackType());
        registry.register(SNOW, new SackType());
        registry.register(BONE_BLOCK, new SackType());
        registry.register(ORE, new SackType());
        registry.register(FUNGUS, new SackType());
        registry.register(PLANT, new SackType());
        registry.register(BAMBOO, new SackType());
        registry.register(CHORUS_FRUIT, new SackType());
        registry.register(EGG, new SackType());
        registry.register(WHEAT_SEEDS, new SackType());
        registry.register(COCOA_BEANS, new SackType());
        registry.register(PUMPKIN_SEEDS, new SackType());
        registry.register(MELON_SEEDS, new SackType());
        registry.register(BEETROOT_SEEDS, new SackType());
        registry.register(TORCHFLOWER_SEEDS, new SackType());
        registry.register(PITCHER_POD, new SackType());
        registry.register(GLOW_BERRIES, new SackType());
        registry.register(SWEET_BERRIES, new SackType());
        registry.register(NETHER_WART, new SackType());
        registry.register(SEA_CREATURE, new SackType());
        registry.register(KELP, new SackType());
        registry.register(CORAL, new SackType());
        registry.register(SPONGE, new SackType());
        registry.register(MELON, new SackType());
        registry.register(PUMPKIN, new SackType());
        registry.register(NEST, new SackType());
        registry.register(HONEY, new SackType());
        registry.register(RESIN, new SackType());
        registry.register(FROGLIGHT, new SackType());
        registry.register(SCULK, new SackType());
        registry.register(COBWEB, new SackType());
        registry.register(BEDROCK, new SackType());
        registry.register(TORCH, new SackType());
        registry.register(LANTERN, new SackType());
        registry.register(END_CRYSTAL, new SackType());
        registry.register(BELL, new SackType());
        registry.register(SCAFFOLDING, new SackType());
        registry.register(POT, new SackType());
        registry.register(ARMOR_STAND, new SackType());
        registry.register(ITEM_FRAME, new SackType());
        registry.register(PAINTING, new SackType());
        registry.register(SIGN, new SackType());
        registry.register(HEAD, new SackType());
        registry.register(INFESTED_STONE, new SackType());
        registry.register(REDSTONE_COMPONENT, new SackType());
        registry.register(RAIL, new SackType());
        registry.register(MINECART, new SackType());
        registry.register(TNT, new SackType());
        registry.register(BUCKET, new SackType());
        registry.register(FIRE_CHARGE, new SackType());
        registry.register(BONE_MEAL, new SackType());
        registry.register(NAME_TAG, new SackType());
        registry.register(LEAD, new SackType());
        registry.register(COMPASS, new SackType());
        registry.register(CLOCK, new SackType());
        registry.register(MAP, new SackType());
        registry.register(WIND_CHARGE, new SackType());
        registry.register(FIREWORK_ROCKET, new SackType());
        registry.register(SADDLE, new SackType());
        registry.register(BOAT, new SackType());
        registry.register(GOAT_HORN, new SackType());
        registry.register(MUSIC_DISC, new SackType());
        registry.register(TOTEM_OF_UNDYING, new SackType());
        registry.register(ARROW, new SackType());
        registry.register(FOOD, new SackType());
        registry.register(CARROT, new SackType());
        registry.register(POTATO, new SackType());
        registry.register(BEETROOT, new SackType());
        registry.register(RAW_FISH, new SackType());
        registry.register(BOTTLE, new SackType());
        registry.register(POTION, new SackType());
        registry.register(WHEAT, new SackType());
        registry.register(CREATURE, new SackType());
        registry.register(HEART_OF_THE_SEA, new SackType());
        registry.register(HEAVY_CORE, new SackType());
        registry.register(DYE, new SackType());
        registry.register(PAPER, new SackType());
        registry.register(BOOK, new SackType());
        registry.register(FIREWORK_STAR, new SackType());
        registry.register(SUGAR, new SackType());
        registry.register(BANNER_PATTERN, new SackType());
        registry.register(POTTERY_SHERD, new SackType());
        registry.register(SMITHING_TEMPLATE, new SackType());
        registry.register(KEY, new SackType());
        registry.register(SPAWN_EGG, new SackType());
        registry.register(COMMAND_BLOCK, new SackType());
        // Biomes O' Plenty Sack Types
        registry.register(BODY_PART, new SackType());
        registry.register(WISPJELLY, new SackType());
        registry.register(NULL, new SackType());
        // Storage Drawers Sack Types
        registry.register(DRAWER, new SackType());
        registry.register(DRAWER_UPGRADE, new SackType());
        registry.register(DRAWER_CONTROLLER, new SackType());
        registry.register(KEY_BUTTON, new SackType());
        // Trailier Tales Sack Types
        registry.register(CYAN_ROSE_SEEDS, new SackType());
        registry.register(DAWNTRAIL_SEEDS, new SackType());
        registry.register(MANEDROP_GERM, new SackType());
        // Waystones Sack Types
        registry.register(WAYSTONE, new SackType());
        registry.register(PORTSTONE, new SackType());
        registry.register(SHARESTONE, new SackType());
        registry.register(WARP_PLATE, new SackType());
        // Wilder Wild Sack Types
        registry.register(PRICKLY_PEAR, new SackType());
    }
}
